AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: Photo Album application stack

Resources:
  Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "photo-album-demo"
  
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: "photo-album-demo"
      PolicyDocument: {
        "Version": "2012-10-17",
        "Id": "MyPolicy",
        "Statement": [
          {
            "Sid": "PublicReadForGetBucketObjects",
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::photo-album-demo/*"
          }
        ]
      }


  PhtotAlbumAPI:        
    Type: AWS::ApiGateway::RestApi
    Properties: 
      CloneFrom: "vffoznfks6"
      Name: "Photo Album API Demo"


  LFLexDemo:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      CodeUri: "s3://photo-album-code/LF-Lex-Parse.zip"
      Description: "Lambda function for search query parsing."
      MemorySize: 128
      Timeout: 10
      Role: "arn:aws:iam::336385704730:role/lex-lambda"
      Environment:
        Variables:
          REGION: us-east-1
      # Events:
      #   LexAPI:
      #     Type: Api
      #     Properties:
      #       Path: /search
      #       Method: get


  LF1Demo:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      CodeUri: "s3://photo-album-code/LF1-Index-Photos.zip"
      Description: "Lambda function for photo indexing"
      MemorySize: 128
      Timeout: 10
      Role: "arn:aws:iam::336385704730:role/s3-lambda"
      Events:
        NewUploadJPG:
          Type: S3
          Properties:
            Bucket: !Ref Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .jpg
        NewUploadJPEG:
          Type: S3
          Properties:
            Bucket: !Ref Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .jpeg
        NewUploadPNG:
          Type: S3
          Properties:
            Bucket: !Ref Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .png
      Environment:
        Variables:
          REGION: us-east-1
      VpcConfig:
        SecurityGroupIds:
          - sg-0dea01d5f5237e9c3
        SubnetIds:
          - subnet-0da92ed308455f87e
          - subnet-0b904293e6384e422
  


  LF2Demo:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      CodeUri: "s3://photo-album-code/LF2-Search-Photos.zip"
      Description: "Lambda function for photo searching"
      MemorySize: 128
      Timeout: 10
      Role: "arn:aws:iam::336385704730:role/lex-lambda"
      # Events:
      #   SearchAPI:
      #     Type: Api
      #     Properties:
      #       Path: /es
      #       Method: put
      Environment:
        Variables:
          REGION: us-east-1
      VpcConfig:
        SecurityGroupIds:
          - sg-0dea01d5f5237e9c3
        SubnetIds:
          - subnet-0da92ed308455f87e
          - subnet-0b904293e6384e422
  

  PhotoAlbumElasticsearch:
    Type: AWS::Elasticsearch::Domain
    Properties: 
      AccessPolicies: {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "AWS": "*"
                            },
                            "Action": "es:*",
                            "Resource": "arn:aws:es:us-east-1:336385704730:domain/photo-album-demo/*"
                          }
                        ]
                      }
      DomainName: "photo-album-demo"
      ElasticsearchVersion: "7.8"
      ElasticsearchClusterConfig:
        DedicatedMasterEnabled: "false"
        InstanceCount: "1"
        ZoneAwarenessEnabled: "false"
        InstanceType: "t2.small.elasticsearch"
      EBSOptions:
        EBSEnabled: true
        Iops: 0
        VolumeSize: 10
        VolumeType: "gp2"
      VPCOptions: 
        SecurityGroupIds:
          - sg-0dea01d5f5237e9c3
        SubnetIds:
          - subnet-0da92ed308455f87e

      
      
      
